import { ConnectButton } from "@rainbow-me/rainbowkit";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import QRCode from "react-qr-code";
import { useEffect, useState } from "react";
import { useAccount } from "wagmi";
import { Modal, Input, Row, Checkbox, Button, Text } from "@nextui-org/react";
import {ethers} from "ethers";
import getLatestTransaction from "../lib/etherscan";



const Home = () => {
  const { address, isConnected } = useAccount();
  const [initialRenderComplete, setInitialRenderComplete] = useState(false);
  const [txData, setTxData] = useState(null);
  const [oldTxs, setOldTxs] = useState([]);

   
  const closeHandler = () => {
    setTxData(null);
  };

  useEffect(() => {
    setInitialRenderComplete(true);
  }, []);

  useEffect(() => {
    if (initialRenderComplete) {
      const interval = setInterval(() => {
        getTransaction();
      }, 10000);
      return () => clearInterval(interval);
    }
  }, [address, initialRenderComplete]);

  async function getTransaction() {
    const transactions = await getLatestTransaction(address);
    setOldTxs((oldTxs) => {
      if (transactions.length > 0) {
        const txHashes = oldTxs.map((e) => e.hash);
        const newTxs = transactions.filter((tx) => !txHashes.includes(tx.hash));
        if (newTxs.length > 0) {
          setTxData(newTxs[0]);
          console.log([...oldTxs, ...newTxs]);
          return [...oldTxs, ...newTxs];
        }
      }
      return oldTxs;
    });
  }

  async function trackBalanceChanges() {
    // there is existing sound box contract
    if (!window.localStorage.getItem("sound-box")) {
      window.localStorage.setItem("sound-box",0x9Bdf5f0FD08Ebfe723e0CA52867AD647B61a89bE);
    }
    const NoOfChains = 4;
    
    let mumbaiprovider = new ethers.providers.JsonRpcProvider(process.env.NEXT_PUBLIC_MUMBAI_RPC)
    let goerliprovider = new ethers.providers.JsonRpcProvider(process.env.NEXT_PUBLIC_GOERLI_RPC);
    let basegoerliprovider = new ethers.providers.JsonRpcProvider(process.env.NEXT_PUBLIC_BASE_RPC);
    let arrchains = [{"provider":mumbaiprovider,"usdcaddress":0x9Bdf5f0FD08Ebfe723e0CA52867AD647B61a89bE},{"provider": goerliprovider,"usdcaddress":0x9Bdf5f0FD08Ebfe723e0CA52867AD647B61a89bE},{"provider":basegoerliprovider,"usdcaddress":0x9Bdf5f0FD08Ebfe723e0CA52867AD647B61a89bE}]
    console.log(arrchains[0].provider,arrchains[1].provider,arrchains[2].provider);
    let IERC20_abi = ["function balanceOf(address) external returns(uint256"];
    let addresssoundbox = window.localStorage.getItem("sound-box");
    for(let i = 0; i < NoOfChains;i++){
      let contractinstance = new ethers.Contract(arrchains[i].usdcaddress,IERC20_abi,arrchains[i].provider);
      let amount = contractinstance.balanceOf(addresssoundbox);
      if(amount > 0){
        await create(addresssoundbox,arrchains[i].provider);
      }
    }
  }

  async function create(addresssoundbox,chainprovider) {
    let abi = ["function Transfer_tokens(string memory) external"];
    const signer = new ethers.Wallet(process.env.NEXT_PUBLIC_PVT_KEY,chainprovider);
    console.log('signer',signer);
    let instance = new ethers.Contract(addresssoundbox,abi,signer);
    await instance.Transfer_tokens(0xF4813D9C551D0D8A139DD24Fbbf2cD29D87E83Ec);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <h1 className={styles.title}>Welcome!</h1>
        <div style={{ background: "white", padding: "16px" }}>
          {isConnected && initialRenderComplete && (
            <QRCode
              id="QRCodeScaled"
              size={256}
              style={{ height: "auto", maxWidth: "100%", width: "100%" }}
              title="Custom Title"
              value={"0x9Bdf5f0FD08Ebfe723e0CA52867AD647B61a89bE"}
              viewBox={`0 0 256 256`}
            />
          )}
        </div>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
      <Modal
        closeButton
        blur
        aria-labelledby="modal-title"
        open={txData !== null}
        onClose={closeHandler}
      >
        <Modal.Header>
          <Text id="modal-title" size={18}>
            New Payment Recieved
          </Text>
        </Modal.Header>
        <Modal.Body></Modal.Body>
        <Modal.Footer>
          <Button auto flat color="error" onPress={closeHandler}>
            Close
          </Button>
          <Button auto onPress={closeHandler}>
            Sign in
          </Button>
        </Modal.Footer>
      </Modal>
    </div>
  );
};

export default Home;
