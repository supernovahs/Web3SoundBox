"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.populateOptionalUserParameters = void 0;
const ethers_1 = require("ethers");
const constants_1 = require("../constants");
const calculateDeadline_1 = require("./calculateDeadline");
const getUserNonce_1 = require("./getUserNonce");
const populateOptionalUserParameters = (payload, config) => __awaiter(void 0, void 0, void 0, function* () {
    const { request, walletOrProvider } = payload;
    const parametersToOverride = {};
    if (!request.userDeadline) {
        parametersToOverride.userDeadline = (0, calculateDeadline_1.calculateDeadline)(constants_1.DEFAULT_DEADLINE_GAP);
    }
    if (!request.userNonce) {
        parametersToOverride.userNonce = ethers_1.BigNumber.from((yield (0, getUserNonce_1.getUserNonce)({
            account: request.user,
            walletOrProvider,
        }, config)).toNumber()).toString();
    }
    return parametersToOverride;
});
exports.populateOptionalUserParameters = populateOptionalUserParameters;
