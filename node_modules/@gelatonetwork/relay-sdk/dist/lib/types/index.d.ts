import { BigNumberish, BytesLike } from "ethers";
export declare enum RelayCall {
    CallWithSyncFee = 0,
    CallWithSyncFeeERC2771 = 1,
    SponsoredCall = 2,
    SponsoredCallERC2771 = 3
}
export declare type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;
export declare type RelayRequestOptions = {
    gasLimit?: BigNumberish;
    retries?: number;
};
export declare type ApiKey = {
    sponsorApiKey: string;
};
export declare type RelayResponse = {
    taskId: string;
};
export declare type EIP712Domain = {
    name: string;
    version: string;
    chainId: number;
    verifyingContract: string;
};
export declare const EIP712_DOMAIN_TYPE_DATA: {
    EIP712Domain: {
        name: string;
        type: string;
    }[];
};
export declare type BaseRelayParams = {
    chainId: BigNumberish;
    target: string;
    data: BytesLike;
};
export declare type BaseCallWithSyncFeeParams = {
    feeToken: string;
    isRelayContext?: boolean;
};
export declare type Config = {
    url: string;
    contract: {
        relayERC2771: string;
    };
};
