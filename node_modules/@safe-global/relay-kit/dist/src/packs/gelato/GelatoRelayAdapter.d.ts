import { BigNumber } from '@ethersproject/bignumber';
import { RelayResponse, TransactionStatusResponse } from '@gelatonetwork/relay-sdk';
import Safe from '@safe-global/protocol-kit';
import { MetaTransactionData, MetaTransactionOptions, RelayTransaction, SafeTransaction } from '@safe-global/safe-core-sdk-types';
import { RelayAdapter } from '../../types';
export declare class GelatoRelayAdapter implements RelayAdapter {
    #private;
    constructor(apiKey?: string);
    private _getFeeToken;
    private _getSafeNonce;
    getFeeCollector(): string;
    getEstimateFee(chainId: number, gasLimit: BigNumber, gasToken?: string): Promise<BigNumber>;
    getTaskStatus(taskId: string): Promise<TransactionStatusResponse | undefined>;
    createRelayedTransaction(safe: Safe, transactions: MetaTransactionData[], options: MetaTransactionOptions): Promise<SafeTransaction>;
    sendSponsorTransaction(target: string, encodedTransaction: string, chainId: number): Promise<RelayResponse>;
    sendSyncTransaction(target: string, encodedTransaction: string, chainId: number, options: MetaTransactionOptions): Promise<RelayResponse>;
    relayTransaction({ target, encodedTransaction, chainId, options }: RelayTransaction): Promise<RelayResponse>;
}
