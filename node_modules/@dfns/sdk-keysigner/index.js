"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsymmetricKeySigner = void 0;
const crypto = __importStar(require("crypto"));
const base64_1 = require("@dfns/sdk/utils/base64");
class AsymmetricKeySigner {
    constructor(options) {
        this.options = options;
    }
    async sign(challenge) {
        var _a;
        const clientData = Buffer.from(JSON.stringify({
            type: 'key.get',
            challenge,
            origin: this.options.appOrigin,
            crossOrigin: (_a = this.options.crossOrigin) !== null && _a !== void 0 ? _a : false,
        }));
        return {
            kind: 'Key',
            credentialAssertion: {
                credId: this.options.credId,
                clientData: (0, base64_1.toBase64Url)(clientData),
                signature: (0, base64_1.toBase64Url)(crypto.sign(this.options.algorithm || undefined, clientData, this.options.privateKey)),
            },
        };
    }
}
exports.AsymmetricKeySigner = AsymmetricKeySigner;
