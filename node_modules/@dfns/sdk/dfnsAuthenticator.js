"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DfnsAuthenticator = void 0;
const baseAuthApi_1 = require("./baseAuthApi");
class DfnsAuthenticator {
    constructor(apiOptions) {
        this.apiOptions = apiOptions;
    }
    async login(request) {
        const { challenge, challengeIdentifier, allowCredentials } = await baseAuthApi_1.BaseAuthApi.createUserLoginChallenge(request, this.apiOptions);
        const assertion = await this.apiOptions.signer.sign(challenge, allowCredentials);
        return baseAuthApi_1.BaseAuthApi.createUserLogin({
            challengeIdentifier,
            firstFactor: assertion,
        }, this.apiOptions);
    }
    async register(request) {
        if (!this.apiOptions.signer.create) {
            throw new Error(`Provided signer does not implement 'create'`);
        }
        const challenge = await baseAuthApi_1.BaseAuthApi.createUserRegistrationChallenge(request, this.apiOptions);
        const attestation = await this.apiOptions.signer.create(challenge);
        return baseAuthApi_1.BaseAuthApi.createUserRegistration({ firstFactorCredential: attestation }, {
            ...this.apiOptions,
            authToken: challenge.temporaryAuthenticationToken,
        });
    }
}
exports.DfnsAuthenticator = DfnsAuthenticator;
