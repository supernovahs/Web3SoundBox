import { DfnsApiClientOptions } from '../../dfnsApiClient';
import * as T from './types';
export declare class PolicyManagementClient {
    private apiOptions;
    constructor(apiOptions: DfnsApiClientOptions);
    createPolicy(request: T.CreatePolicyRequest): Promise<T.CreatePolicyResponse>;
    getPolicyById(request: T.GetPolicyByIdRequest): Promise<T.GetPolicyByIdResponse>;
    listPolicies(): Promise<T.ListPoliciesResponse>;
    archivePolicy(request: T.ArchivePolicyRequest): Promise<T.ArchivePolicyResponse>;
    createPolicyControl(request: T.CreatePolicyControlRequest): Promise<T.CreatePolicyControlResponse>;
    getPolicyControlById(request: T.GetPolicyControlByIdRequest): Promise<T.GetPolicyControlByIdResponse>;
    listPolicyControls(): Promise<T.ListPolicyControlsResponse>;
    archivePolicyControl(request: T.ArchivePolicyControlRequest): Promise<T.ArchivePolicyControlResponse>;
    createPolicyRule(request: T.CreatePolicyRuleRequest): Promise<T.CreatePolicyRuleResponse>;
    getPolicyRuleById(request: T.GetPolicyRuleByIdRequest): Promise<T.GetPolicyRuleByIdResponse>;
    listPolicyRules(request: T.ListPolicyRulesRequest): Promise<T.ListPolicyRulesResponse>;
    archivePolicyRule(request: T.ArchivePolicyRuleRequest): Promise<T.ArchivePolicyRuleResponse>;
}
