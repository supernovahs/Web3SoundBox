import { SignUserActionChallengeRequest, UserActionChallengeResponse } from '../../baseAuthApi';
import { DfnsDelegatedApiClientOptions } from '../../dfnsDelegatedApiClient';
import * as T from './types';
export declare class DelegatedPolicyExecutionClient {
    private apiOptions;
    constructor(apiOptions: DfnsDelegatedApiClientOptions);
    listPolicyControlExecutions(request: T.ListPolicyControlExecutionsRequest): Promise<T.ListPolicyControlExecutionsResponse>;
    getPolicyControlExecutionById(request: T.GetPolicyControlExecutionByIdRequest): Promise<T.GetPolicyControlExecutionByIdResponse>;
    updatePolicyControlExecutionInit(request: T.UpdatePolicyControlExecutionRequest): Promise<UserActionChallengeResponse>;
    updatePolicyControlExecutionComplete(request: T.UpdatePolicyControlExecutionRequest, signedChallenge: SignUserActionChallengeRequest): Promise<T.UpdatePolicyControlExecutionResponse>;
}
