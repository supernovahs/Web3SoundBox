import { DocumentSnapshot, EntityId, IsoDatetime } from '../Foundations';
export type CallbackEvent = {
    id: EntityId;
    orgId: EntityId;
    externalId?: string;
    callbackSubscriptionId: EntityId;
    kind: CallbackEventKind;
    documentSnapshot: DocumentSnapshot;
    dateCreated: IsoDatetime;
    status: CallbackEventStatus;
};
export type CallbackSubscription = {
    id: EntityId;
    orgId: EntityId;
    externalId?: string;
    eventKind: CallbackEventKind;
    url: string;
    status: CallbackSubscriptionStatus;
    dateCreated: IsoDatetime;
};
export type CreateCallbackSubscriptionInput = {
    externalId?: string;
    eventKind: CallbackEventKind;
    url: string;
};
export declare enum CallbackEventKind {
    PaymentInitiated = "PaymentInitiated",
    PaymentExecuted = "PaymentExecuted",
    PaymentConfirmed = "PaymentConfirmed",
    PaymentReceived = "PaymentReceived",
    TransactionBroadcasted = "TransactionBroadcasted",
    WalletCreated = "WalletCreated",
    PolicyActivated = "PolicyActivated"
}
export declare enum CallbackEventStatus {
    Sent = "Sent",
    Failed = "Failed"
}
export declare enum CallbackSubscriptionStatus {
    Enabled = "Enabled",
    Disabled = "Disabled",
    Archived = "Archived"
}
