import { BadRequestError, EntityNotFoundError, ForbiddenError, UnauthorizedError } from '../Foundations';
import { Policy, PolicyControl, PolicyRule } from './types';
export type CreatePolicySuccess = Policy;
export type CreatePolicyError = {
    error: BadRequestError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type CreatePolicyResponse = CreatePolicySuccess | CreatePolicyError;
export type UpdatePolicySuccess = Policy;
export type UpdatePolicyError = {
    error: BadRequestError | EntityNotFoundError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type UpdatePolicyResponse = UpdatePolicySuccess | UpdatePolicyError;
export type GetPolicyByIdSuccess = Policy;
export type GetPolicyByIdError = {
    error: EntityNotFoundError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type GetPolicyByIdResponse = GetPolicyByIdSuccess | GetPolicyByIdError;
export type ListPoliciesSuccess = {
    items: Policy[];
};
export type ListPoliciesError = {
    error: UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type ListPoliciesResponse = ListPoliciesSuccess | ListPoliciesError;
export type ArchivePolicySuccess = Policy;
export type ArchivePolicyError = {
    error: EntityNotFoundError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type ArchivePolicyResponse = ArchivePolicySuccess | ArchivePolicyError;
export type CreatePolicyControlSuccess = PolicyControl;
export type CreatePolicyControlError = {
    error: BadRequestError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type CreatePolicyControlResponse = CreatePolicyControlSuccess | CreatePolicyControlError;
export type UpdatePolicyControlSuccess = PolicyControl;
export type UpdatePolicyControlError = {
    error: BadRequestError | EntityNotFoundError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type UpdatePolicyControlResponse = UpdatePolicyControlSuccess | UpdatePolicyControlError;
export type GetPolicyControlByIdSuccess = PolicyControl;
export type GetPolicyControlByIdError = {
    error: EntityNotFoundError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type GetPolicyControlByIdResponse = GetPolicyControlByIdSuccess | GetPolicyControlByIdError;
export type ListPolicyControlsSuccess = {
    items: PolicyControl[];
};
export type ListPolicyControlsError = {
    error: UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type ListPolicyControlsResponse = ListPolicyControlsSuccess | ListPolicyControlsError;
export type ArchivePolicyControlSuccess = PolicyControl;
export type ArchivePolicyControlError = {
    error: EntityNotFoundError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type ArchivePolicyControlResponse = ArchivePolicyControlSuccess | ArchivePolicyControlError;
export type CreatePolicyRuleSuccess = PolicyRule;
export type CreatePolicyRuleError = {
    error: BadRequestError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type CreatePolicyRuleResponse = CreatePolicyRuleSuccess | CreatePolicyRuleError;
export type UpdatePolicyRuleSuccess = PolicyRule;
export type UpdatePolicyRuleError = {
    error: UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type UpdatePolicyRuleResponse = UpdatePolicyRuleSuccess | UpdatePolicyRuleError;
export type GetPolicyRuleByIdSuccess = PolicyRule;
export type GetPolicyRuleByIdError = {
    error: UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type GetPolicyRuleByIdResponse = GetPolicyRuleByIdSuccess | GetPolicyRuleByIdError;
export type ListPolicyRulesSuccess = {
    items: PolicyRule[];
};
export type ListPolicyRulesError = {
    error: UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type ListPolicyRulesResponse = ListPolicyRulesSuccess | ListPolicyRulesError;
export type ArchivePolicyRuleSuccess = PolicyRule;
export type ArchivePolicyRuleError = {
    error: EntityNotFoundError | UnauthorizedError | ForbiddenError | BadRequestError | EntityNotFoundError;
};
export type ArchivePolicyRuleResponse = ArchivePolicyRuleSuccess | ArchivePolicyRuleError;
