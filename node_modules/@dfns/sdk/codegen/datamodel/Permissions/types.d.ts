import { EntityId, IsoDatetime } from '../Foundations';
export type Permission = {
    id: EntityId;
    orgId: EntityId;
    name: string;
    operations: string[];
    status: PermissionStatus;
    resourceId?: string;
    isImmutable: boolean;
    predicates?: PermissionPredicate[];
    dateCreated: IsoDatetime;
    dateUpdated: IsoDatetime;
    isArchived: boolean;
};
export type PermissionPredicate = {
    id: EntityId;
    permissionId: EntityId;
    fieldName: string;
    evaluatorKind: FieldEvaluatorKind;
    parameters: string[];
    isImmutable: boolean;
    dateCreated: IsoDatetime;
    dateUpdated: IsoDatetime;
    isArchived: boolean;
};
export type PermissionAssignment = {
    id: EntityId;
    permissionId: string;
    identityId: EntityId;
    dateCreated: IsoDatetime;
    dateUpdated: IsoDatetime;
};
export type DeletionAcknowledgement = {
    id: string;
};
export type ResourceOwnership = {
    id: EntityId;
    orgId: EntityId;
    resourceId: EntityId;
    resourceKind: string;
    ownerId: EntityId;
    ownerKind: OwnerKind;
    dateCreated: IsoDatetime;
    dateUpdated: IsoDatetime;
};
export type CreatePermissionInput = {
    name: string;
    operations: string[];
};
export type UpdatePermissionInput = {
    name?: string;
    operations?: string[];
};
export type ArchivePermissionInput = {
    isArchived: boolean;
};
export type CreatePermissionPredicateInput = {
    fieldName: string;
    evaluatorKind: FieldEvaluatorKind;
    parameters: string[];
};
export type UpdatePermissionPredicateInput = {
    fieldName?: string;
    evaluatorKind?: FieldEvaluatorKind;
    parameters?: string[];
};
export type ArchivePermissionPredicateInput = {
    isArchived: boolean;
};
export type CreatePermissionAssignmentInput = {
    permissionId: string;
    identityId: string;
};
export declare enum FieldEvaluatorKind {
    ContainsAll = "ContainsAll",
    ContainsOneOf = "ContainsOneOf",
    DateAfter = "DateAfter",
    DateBefore = "DateBefore",
    Is = "Is",
    ValueGreaterThan = "ValueGreaterThan",
    ValueLessThan = "ValueLessThan"
}
export declare enum PermissionStatus {
    Active = "Active"
}
export declare enum OwnerKind {
    LegalPerson = "LegalPerson",
    NaturalPerson = "NaturalPerson"
}
export declare enum ResourceKind {
    Wallet = "Wallet",
    PublicKey = "PublicKey"
}
